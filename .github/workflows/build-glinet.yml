name: build gl.inet

on:
  workflow_dispatch:
    inputs:
      device:
        description: '选择设备'     
        required: true
        default: 'target_wlan_ap-gl-ax1800' 
        type: choice
        options:
        - target_wlan_ap-gl-ax1800
        - target_wlan_ap-gl-axt1800
        - target_wlan_ap-gl-ax1800-5-4
        - target_wlan_ap-gl-axt1800-5-4
        
      ui:
        description: '是否包含官方UI'
        required: false
        type: boolean
env:
  REPO_URL: https://github.com/qqhpc/gl-infra-builder.git
  REPO_BRANCH: main
  UPLOAD_BIN_DIR: true
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: update
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/qqhpc/configfiles/main/openwrt/depends-ubuntu)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        git config --global user.email "github-actions[bot]@github.com"
        git config --global user.name "github-actions[bot]"

    - name: Get code
      run: |
        df -hT $PWD
        echo "下载gl-inet openwrt源码"
        git clone -b $REPO_BRANCH $REPO_URL /workdir/gl-infra-builder

    - name: Build 
      run: |
        pwd
        ls
        cd /home/runner/work/build-gl.inet/build-gl.inet/scripts/
        chmod +x build.sh
        ./build.sh ~ ${{ inputs.device }} ${{ inputs.ui }}
        
    - name: Organize files
      id: organize
      if: true && !failure() && !cancelled()
      run: |
        cd /workdir/gl-infra-builder/wlan-ap/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled() && !failure()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: /workdir/gl-infra-builder/wlan-ap/openwrt/bin

    - name: Generate release tag
      id: tag
      if: true && !failure() && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled() && !failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
